Understand multi-tenant concepts and design frameworks, such as MVC architecture and Lightning Component Framework. [1]
Given a scenario, identify common use cases and best practices for declarative versus programmatic customizations, including governor limits, formula fields, and roll-up summaries. [2]
Given a scenario, determine, create, and access the appropriate data model including objects, fields, relationships, and external IDs. [3]
Given a scenario, identify the options and considerations when importing and exporting data into development environments. [4]
Identify the capabilities of the declarative process automation features. [5]
Declare variables, constants, methods, and use modifiers and Apex interfaces. [6]
Given a scenario, use and apply Apex control flow statements. [7]
Given a scenario, write SOSL, SOQL, and DML statements in Apex. [8]
Given a scenario, follow best practices to write Apex classes and triggers. [9]
Given a scenario, identify the implications of governor limits on Apex transactions. [10]
Describe the relationship between Apex transactions, the save order of execution, and the potential for recursion and/or cascading. [11]
Implement exception handling in Apex, including custom exceptions as needed. [12]
Given a scenario, use declarative functionality and Apex together to automate business logic. [13]
Given a scenario, display content or modify Salesforce data using a Visualforce page and the appropriate controllers or extensions as needed. [14]
Describe the Lightning Component framework, its benefits, and the types of content that can be contained in a Lightning web component. [15]
Given a scenario, prevent user interface and data access security vulnerabilities. [16]
Given a scenario, display and use a custom user interface components, including Lightning Components, Flow, and Visualforce. [16]
Describe the use cases and best practices for Lightning Web Component events. [17]
Given a scenario, implement Apex to work with various types of page components, including Lightning Components, Flow, Next Best Actions, etc. [18]
Write and execute tests for triggers, controllers, classes, flows, and processes using various sources of test data. [19]
Given a scenario, know how and when to use the Salesforce Developer tools such as Salesforce DX, Salesforce CLI, and Developer Console. [20]
Describe how to approach debugging system issues and monitoring flows, processes, and asynchronous and batch jobs, etc. [21]
Describe the environments, requirements, and process for deploying code and associated configurations. [22]